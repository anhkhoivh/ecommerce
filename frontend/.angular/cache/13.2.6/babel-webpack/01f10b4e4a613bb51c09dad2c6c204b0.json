{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport { BehaviorSubject } from 'rxjs';\nimport { Basket } from '../shared/models/basket';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class BasketService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = environment.apiUrl;\n    this.basketSource = new BehaviorSubject(null); // similar to async pipe\n\n    this.basket$ = this.basketSource.asObservable();\n    this.basketTotalSource = new BehaviorSubject(null);\n    this.basketTotals$ = this.basketTotalSource.asObservable();\n    this.shipping = 0;\n  }\n\n  createPaymentIntent() {\n    return this.http.post(this.baseUrl + 'payments/' + this.getCurrentBasketValue().id, {}).pipe(map(basket => {\n      this.basketSource.next(basket);\n    }));\n  }\n\n  setShippingPrice(deliveryMethod) {\n    this.shipping = deliveryMethod.price;\n    const basket = this.getCurrentBasketValue();\n    basket.deliveryMethodId = deliveryMethod.id;\n    basket.shippingPrice = deliveryMethod.price;\n    this.calculateTotals();\n    this.setBasket(basket);\n  }\n\n  getBasket(id) {\n    return this.http.get(this.baseUrl + 'basket?id=' + id).pipe(map(basket => {\n      this.basketSource.next(basket);\n      this.shipping = basket.shippingPrice;\n      this.calculateTotals();\n    }));\n  }\n\n  setBasket(basket) {\n    return this.http.post(this.baseUrl + 'basket', basket).subscribe(response => {\n      // This will update the BehaviorSubject withnew value\n      this.basketSource.next(response);\n      this.calculateTotals();\n    }, error => console.log(error));\n  }\n\n  getCurrentBasketValue() {\n    return this.basketSource.value;\n  }\n\n  addItemToBasket(item, quantity = 1) {\n    var _a;\n\n    const itemToAdd = this.mapProductToBasketItem(item, quantity);\n    const basket = (_a = this.getCurrentBasketValue()) !== null && _a !== void 0 ? _a : this.createBasket();\n    basket.items = this.addOrUpdateItem(basket.items, itemToAdd, quantity);\n    this.setBasket(basket);\n  }\n\n  incrementItemQuantity(item) {\n    const basket = this.getCurrentBasketValue();\n    const foundItemIndex = basket.items.findIndex(x => x.id === item.id);\n    basket.items[foundItemIndex].quantity++;\n    this.setBasket(basket);\n  }\n\n  decrementItemQuantity(item) {\n    const basket = this.getCurrentBasketValue();\n    const foundItemIndex = basket.items.findIndex(x => x.id === item.id);\n\n    if (basket.items[foundItemIndex].quantity > 1) {\n      basket.items[foundItemIndex].quantity--;\n      this.setBasket(basket);\n    } else {\n      this.removeItemFromBasket(item);\n    }\n  }\n\n  removeItemFromBasket(item) {\n    const basket = this.getCurrentBasketValue();\n\n    if (basket.items.some(x => x.id === item.id)) {\n      basket.items = basket.items.filter(x => x.id !== item.id);\n\n      if (basket.items.length > 0) {\n        this.setBasket(basket);\n      } else {\n        this.deleteBasket(basket);\n      }\n    }\n  }\n\n  deleteLocalBasket(id) {\n    this.basketSource.next(null);\n    this.basketTotalSource.next(null);\n    localStorage.removeItem('basket_id');\n  }\n\n  deleteBasket(basket) {\n    return this.http.delete(this.baseUrl + 'basket?id=' + basket.id).subscribe(() => {\n      this.basketSource.next(null);\n      this.basketTotalSource.next(null);\n      localStorage.removeItem('basket_id');\n    }, error => {\n      console.log(error);\n    });\n  }\n\n  calculateTotals() {\n    const basket = this.getCurrentBasketValue();\n    const shipping = this.shipping;\n    const subtotal = basket.items.reduce((a, b) => b.price * b.quantity + a, 0);\n    const total = shipping + subtotal;\n    this.basketTotalSource.next({\n      shipping,\n      total,\n      subtotal\n    });\n  }\n\n  addOrUpdateItem(items, itemToAdd, quantity) {\n    const index = items.findIndex(i => i.id === itemToAdd.id);\n\n    if (index === -1) {\n      itemToAdd.quantity = quantity;\n      items.push(itemToAdd);\n    } else {\n      items[index].quantity += quantity;\n    }\n\n    return items;\n  }\n\n  createBasket() {\n    const basket = new Basket();\n    localStorage.setItem('basket_id', basket.id);\n    return basket;\n  }\n\n  mapProductToBasketItem(item, quantity) {\n    return {\n      id: item.id,\n      productName: item.name,\n      price: item.price,\n      pictureUrl: item.pictureUrl,\n      quantity,\n      brand: item.productBrand,\n      type: item.productType\n    };\n  }\n\n}\n\nBasketService.ɵfac = function BasketService_Factory(t) {\n  return new (t || BasketService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nBasketService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: BasketService,\n  factory: BasketService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["D:/Courses/E-commerce/ecommerce/frontend/src/app/basket/basket.service.ts"],"names":["environment","BehaviorSubject","Basket","map","i0","i1","BasketService","constructor","http","baseUrl","apiUrl","basketSource","basket$","asObservable","basketTotalSource","basketTotals$","shipping","createPaymentIntent","post","getCurrentBasketValue","id","pipe","basket","next","setShippingPrice","deliveryMethod","price","deliveryMethodId","shippingPrice","calculateTotals","setBasket","getBasket","get","subscribe","response","error","console","log","value","addItemToBasket","item","quantity","_a","itemToAdd","mapProductToBasketItem","createBasket","items","addOrUpdateItem","incrementItemQuantity","foundItemIndex","findIndex","x","decrementItemQuantity","removeItemFromBasket","some","filter","length","deleteBasket","deleteLocalBasket","localStorage","removeItem","delete","subtotal","reduce","a","b","total","index","i","push","setItem","productName","name","pictureUrl","brand","productBrand","type","productType","ɵfac","BasketService_Factory","t","ɵɵinject","HttpClient","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":"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","sourcesContent":["import { environment } from 'src/environments/environment';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { Basket } from '../shared/models/basket';\r\nimport { map } from 'rxjs/operators';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/common/http\";\r\nexport class BasketService {\r\n    constructor(http) {\r\n        this.http = http;\r\n        this.baseUrl = environment.apiUrl;\r\n        this.basketSource = new BehaviorSubject(null);\r\n        // similar to async pipe\r\n        this.basket$ = this.basketSource.asObservable();\r\n        this.basketTotalSource = new BehaviorSubject(null);\r\n        this.basketTotals$ = this.basketTotalSource.asObservable();\r\n        this.shipping = 0;\r\n    }\r\n    createPaymentIntent() {\r\n        return this.http.post(this.baseUrl + 'payments/' + this.getCurrentBasketValue().id, {})\r\n            .pipe(map((basket) => {\r\n            this.basketSource.next(basket);\r\n        }));\r\n    }\r\n    setShippingPrice(deliveryMethod) {\r\n        this.shipping = deliveryMethod.price;\r\n        const basket = this.getCurrentBasketValue();\r\n        basket.deliveryMethodId = deliveryMethod.id;\r\n        basket.shippingPrice = deliveryMethod.price;\r\n        this.calculateTotals();\r\n        this.setBasket(basket);\r\n    }\r\n    getBasket(id) {\r\n        return this.http.get(this.baseUrl + 'basket?id=' + id)\r\n            .pipe(map((basket) => {\r\n            this.basketSource.next(basket);\r\n            this.shipping = basket.shippingPrice;\r\n            this.calculateTotals();\r\n        }));\r\n    }\r\n    setBasket(basket) {\r\n        return this.http.post(this.baseUrl + 'basket', basket)\r\n            .subscribe((response) => {\r\n            // This will update the BehaviorSubject withnew value\r\n            this.basketSource.next(response);\r\n            this.calculateTotals();\r\n        }, (error) => console.log(error));\r\n    }\r\n    getCurrentBasketValue() {\r\n        return this.basketSource.value;\r\n    }\r\n    addItemToBasket(item, quantity = 1) {\r\n        var _a;\r\n        const itemToAdd = this.mapProductToBasketItem(item, quantity);\r\n        const basket = (_a = this.getCurrentBasketValue()) !== null && _a !== void 0 ? _a : this.createBasket();\r\n        basket.items = this.addOrUpdateItem(basket.items, itemToAdd, quantity);\r\n        this.setBasket(basket);\r\n    }\r\n    incrementItemQuantity(item) {\r\n        const basket = this.getCurrentBasketValue();\r\n        const foundItemIndex = basket.items.findIndex((x) => x.id === item.id);\r\n        basket.items[foundItemIndex].quantity++;\r\n        this.setBasket(basket);\r\n    }\r\n    decrementItemQuantity(item) {\r\n        const basket = this.getCurrentBasketValue();\r\n        const foundItemIndex = basket.items.findIndex((x) => x.id === item.id);\r\n        if (basket.items[foundItemIndex].quantity > 1) {\r\n            basket.items[foundItemIndex].quantity--;\r\n            this.setBasket(basket);\r\n        }\r\n        else {\r\n            this.removeItemFromBasket(item);\r\n        }\r\n    }\r\n    removeItemFromBasket(item) {\r\n        const basket = this.getCurrentBasketValue();\r\n        if (basket.items.some((x) => x.id === item.id)) {\r\n            basket.items = basket.items.filter((x) => x.id !== item.id);\r\n            if (basket.items.length > 0) {\r\n                this.setBasket(basket);\r\n            }\r\n            else {\r\n                this.deleteBasket(basket);\r\n            }\r\n        }\r\n    }\r\n    deleteLocalBasket(id) {\r\n        this.basketSource.next(null);\r\n        this.basketTotalSource.next(null);\r\n        localStorage.removeItem('basket_id');\r\n    }\r\n    deleteBasket(basket) {\r\n        return this.http.delete(this.baseUrl + 'basket?id=' + basket.id).subscribe(() => {\r\n            this.basketSource.next(null);\r\n            this.basketTotalSource.next(null);\r\n            localStorage.removeItem('basket_id');\r\n        }, error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n    calculateTotals() {\r\n        const basket = this.getCurrentBasketValue();\r\n        const shipping = this.shipping;\r\n        const subtotal = basket.items.reduce((a, b) => (b.price * b.quantity) + a, 0);\r\n        const total = shipping + subtotal;\r\n        this.basketTotalSource.next({ shipping, total, subtotal });\r\n    }\r\n    addOrUpdateItem(items, itemToAdd, quantity) {\r\n        const index = items.findIndex(i => i.id === itemToAdd.id);\r\n        if (index === -1) {\r\n            itemToAdd.quantity = quantity;\r\n            items.push(itemToAdd);\r\n        }\r\n        else {\r\n            items[index].quantity += quantity;\r\n        }\r\n        return items;\r\n    }\r\n    createBasket() {\r\n        const basket = new Basket();\r\n        localStorage.setItem('basket_id', basket.id);\r\n        return basket;\r\n    }\r\n    mapProductToBasketItem(item, quantity) {\r\n        return {\r\n            id: item.id,\r\n            productName: item.name,\r\n            price: item.price,\r\n            pictureUrl: item.pictureUrl,\r\n            quantity,\r\n            brand: item.productBrand,\r\n            type: item.productType\r\n        };\r\n    }\r\n}\r\nBasketService.ɵfac = function BasketService_Factory(t) { return new (t || BasketService)(i0.ɵɵinject(i1.HttpClient)); };\r\nBasketService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: BasketService, factory: BasketService.ɵfac, providedIn: 'root' });\r\n"]},"metadata":{},"sourceType":"module"}